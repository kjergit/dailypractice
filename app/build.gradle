apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            keyAlias 'simon'
            keyPassword 'simonkjer55'
            storeFile file('D:/android_studio_workspace/keystore/testkey.jks')
            storePassword 'simonkjer'
        }
        debug {
            keyAlias 'simon'
            keyPassword 'simonkjer55'
            storeFile file('D:/android_studio_workspace/keystore/testkey.jks')
            storePassword 'simonkjer'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '25.0.0'
    defaultConfig {
//        applicationId "cn.com.kjer.practice"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "0.01"
        //解决 65535问题 设置支持分包
        multiDexEnabled true

//        manifestPlaceholders = [CHANNEL_NAME: "CHANNEL_NAME"]
    }



    signingConfigs {
        relealse {
            //配置 signing 配置文件 读取相应的签名密钥和用户名
            File propFile = file('signing.properties');
            if (propFile.exists()) {
                def Properties props = new Properties()
                props.load(new FileInputStream(propFile))
                if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                        props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
                    storeFile = file(props['STORE_FILE'])
                    storePassword = props['STORE_PASSWORD']
                    keyAlias = props['KEY_ALIAS']
                    keyPassword = props['KEY_PASSWORD']
                }
            }
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //加载默认混淆配置文件 progudard-android.txt在sdk目录里面，不用管，proguard.cfg是我们自己配<span></span>的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            //签名
//            signingConfig signingConfigs.relealse
//            minifyEnabled true
//            shrinkResources true
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //配置输出apk 名称格式
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {

                        File outputDirectory = new File(outputFile.parent);
                        def fileName
                        if (variant.buildType.name == "release") {
                            fileName = "SimonTest_v${defaultConfig.versionName}_${variant.productFlavors[0].name}_release.apk"
                        } else if (variant.buildType.name == "debug") {
                            fileName = "SimonTest_v${defaultConfig.versionName}_${variant.productFlavors[0].name}_debug.apk"
                        }
                        output.outputFile = new File(outputDirectory, fileName)

//                        // 输出apk名称为SimonTest_v1.0_xxx.apk
//                        def fileName = "SimonTest_${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
                    }
//                    // 删除unaligned apk
//                    if (output.zipAlign != null) {
//                        output.zipAlign.doLast {
//                            output.zipAlign.inputFile.delete()
//                        }
//                    }
                }
            }
        }
    }

    //渠道Flavors
    productFlavors {
        GooglePlay {}
        xiaomi {}
        umeng {}
        kuan {}

        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }


}
sourceSets {
    //配置aidl 文件路径
//     main {
//         aidl.srcDirs = ['src/main/java']
//     }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //关联 leakcanary
    //解决 65535 错误
    //透明状态栏
    //    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    //关联vollery
    compile project(':vollery')

    //rxjava
    //RxJava2 Adapter

    //retrofit
    //Gson converter

    //okhttp
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
}
//apply from: 'https://raw.github.com/mcxiaoke/gradle-mvn-push/master/jar.gradle'
//apply from: 'https://raw.github.com/mcxiaoke/gradle-mvn-push/master/gradle-mvn-push.gradle'
